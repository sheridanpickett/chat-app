{"version":3,"sources":["reducers/index.js","actions/index.js","connectSocket.js","styles/App.js","styles/SideBar.js","styles/LogOut.js","containers/LogOut.js","components/LogOut.js","styles/UsersInRoom.js","containers/UsersInRoom.js","components/UsersInRoom.js","containers/SideBar.js","components/SideBar.js","styles/InputAndSubmit.js","components/InputAndSubmit.js","styles/EnterName.js","containers/EnterName.js","components/EnterName.js","styles/ChatArea.js","styles/TabBar.js","styles/Tab.js","containers/Tab.js","components/Tab.js","styles/TabNew.js","containers/TabNew.js","components/TabNew.js","containers/TabBar.js","components/TabBar.js","styles/JoinRoom.js","containers/JoinRoom.js","components/JoinRoom.js","styles/Messages.js","styles/Message.js","styles/LoadingDots.js","components/LoadingDots.js","containers/Messages.js","components/Messages.js","styles/SendMessage.js","containers/SendMessage.js","components/SendMessage.js","getDateTime.js","containers/ChatArea.js","components/ChatArea.js","App.js","containers/App.js","serviceWorker.js","index.js","loadState.js"],"names":["initialState","user","name","id","rooms","activeRoom","roomInfo","removeItem","array","index","newArray","slice","splice","removeItemById","idIndex","map","updateItem","item","reducer","state","arguments","length","undefined","action","type","Object","assign","objectSpread","concat","toConsumableArray","room","defineProperty","messages","users","loading","_state$roomInfo","_action$room","rest","objectWithoutProperties","_toPropertyKey","message","includes","isLoading","newMessage","updateUser","updateActiveRoom","deleteRoomInfo","setRoomLoading","setRoomNewMessage","socketIOClient","styled","div","_templateObject","SideBar_templateObject","button","LogOut_templateObject","connect","dispatch","_ref","react_default","a","createElement","LogOut","onClick","forEach","socket","emit","UsersInRoom_templateObject","UsersInRoom","SideBar","Fragment","containers_LogOut","containers_UsersInRoom","form","InputAndSubmit_templateObject","components_InputAndSubmit","placeholder","buttonText","_useState","useState","_useState2","slicedToArray","value","setValue","InputAndSubmit","onChange","e","target","preventDefault","EnterName_templateObject","EnterName","ChatArea_templateObject","TabBar_templateObject","Tab_templateObject","ownProps","deleteRoom","useEffect","Tab","newRooms","stopPropagation","style","color","className","TabNew_templateObject","addRoom","TabNew","roomTabs","containers_Tab","key","generate","TabBar","containers_TabNew","JoinRoom_templateObject","updateRoom","JoinRoom","Messages_templateObject","Message_templateObject","LoadingDots_templateObject","components_LoadingDots","LoadingDots","dateInt","dateTime","container","useRef","current","scrollHeight","bottomDiv","scrollBottom","setScrollBottom","_useState3","_useState4","loadingOldMessages","setLoadingOldMessages","loadingDone","on","removeListener","useLayoutEffect","scrollTop","clientHeight","scrollIntoView","displayMessages","Message","userName","dateString","msg","Messages","ref","onScroll","SendMessage_templateObject","SendMessage","today","Date","hour","getHours","minute","getMinutes","day","getDate","month","getMonth","year","getFullYear","now","getDateTime","inRoom","ChatArea","containers_TabBar","containers_Messages","containers_JoinRoom","containers_SendMessage","App","title","addMessage","addMessages","addUserToRoom","removeUserFromRoom","notification","setNotification","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","serializedState","JSON","stringify","localStorage","setItem","err","console","log","newUser","reverse","removeAllListeners","handleMessage","styles_App","containers_EnterName","containers_SideBar","containers_ChatArea","Boolean","window","location","hostname","match","persistedState","getItem","parse","loadState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","trace","ReactDOM","render","es","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44b6c205.chunk.js","sourcesContent":["const initialState = {\n  user: {\n    name: '',\n    id: ''\n  },\n  rooms: [],\n  activeRoom: null,\n  roomInfo: {}\n}\n\nconst removeItem = (array, index) => {\n  const newArray = array.slice();\n  newArray.splice(index, 1);\n  return newArray;\n}\n\nconst removeItemById = (array, id) => {\n  const newArray = array.slice();\n  const idIndex = array.map((user, index) => {\n    if(user.id===id) {return index}\n    return null\n  })\n  newArray.splice(idIndex, 1);\n  return newArray;\n}\n\nconst updateItem = (array, item, index) => {\n  let newArray = array.slice();\n  newArray[index] = item;\n  return newArray;\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'UPDATE_USER':\n      return Object.assign({}, state, {\n        user: action.user\n      })\n    case 'UPDATE_ACTIVE_ROOM':\n      return Object.assign({}, state, {\n        activeRoom: action.index\n      })\n    case 'ADD_ROOM':\n      return ({\n        ...state,\n        rooms: [...state.rooms, ''],\n      })\n    case 'UPDATE_ROOM':\n      const room = action.room;\n      if(state.roomInfo[room]) {\n        return ({\n          ...state,\n          rooms: updateItem(state.rooms, room, state.activeRoom),\n        })\n      } else {\n        return ({\n          ...state,\n          rooms: updateItem(state.rooms, action.room, state.activeRoom),\n          roomInfo: {...state.roomInfo, [action.room]: {\n            messages: [],\n            users: [],\n            loading: true\n          }}\n        })\n      }\n    case 'DELETE_ROOM':\n      return ({\n        ...state,\n        rooms: removeItem(state.rooms, action.index)\n      })\n    case 'DELETE_ROOM_INFO':\n      let {[action.room]: omit, ...rest} = state.roomInfo;\n      return ({\n        ...state,\n        roomInfo: {\n          ...rest\n        }\n      })\n    case 'ADD_MESSAGE':\n      return ({\n        ...state,\n        roomInfo: {\n          ...state.roomInfo,\n          [action.message.room]: {\n            ...state.roomInfo[action.message.room],\n            messages: [...state.roomInfo[action.message.room].messages, action.message]\n          }\n        }\n      })\n    case 'ADD_MESSAGES':\n      return ({\n        ...state,\n        roomInfo: {\n          ...state.roomInfo,\n          [action.room]: {\n            ...state.roomInfo[action.room],\n            messages: [...action.messages, ...state.roomInfo[action.room].messages]\n          }\n        }\n      })\n    case 'ADD_USER_TO_ROOM':\n    const userIds = state.roomInfo[action.room].users.map(user => user.id);\n    if(!userIds.includes(action.user.id)){\n      return ({\n        ...state,\n        roomInfo: {\n          ...state.roomInfo,\n          [action.room]: {\n            ...state.roomInfo[action.room],\n            users: [...state.roomInfo[action.room].users, action.user]\n          }\n        }\n      })\n    } else {\n      return ({...state})\n    }\n    case 'REMOVE_USER_FROM_ROOM':\n    return ({\n      ...state,\n      roomInfo: {\n        ...state.roomInfo,\n        [action.room]: {\n          ...state.roomInfo[action.room],\n          users: removeItemById(state.roomInfo[action.room].users, action.id)\n        }\n      }\n    })\n    case 'SET_ROOM_LOADING':\n    return ({\n      ...state,\n      roomInfo: {\n        ...state.roomInfo,\n        [action.room]: {\n          ...state.roomInfo[action.room],\n          loading: action.isLoading\n        }\n      }\n    })\n    case 'SET_ROOM_NEW_MESSAGE':\n    if(action.room!==''){\n      return ({\n        ...state,\n        roomInfo: {\n          ...state.roomInfo,\n          [action.room]: {\n            ...state.roomInfo[action.room],\n            newMessage: action.newMessage\n          }\n        }\n      })\n    } else {\n      return state\n    }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","export const updateUser = user => ({\n  type: 'UPDATE_USER',\n  user\n})\n\nexport const updateActiveRoom = index => ({\n  type: 'UPDATE_ACTIVE_ROOM',\n  index\n})\n\nexport const addRoom = () => ({\n  type: 'ADD_ROOM',\n})\n\nexport const updateRoom = room => ({\n  type: 'UPDATE_ROOM',\n  room\n})\n\nexport const deleteRoom = index => ({\n  type: 'DELETE_ROOM',\n  index\n})\n\nexport const deleteRoomInfo = room => ({\n  type: 'DELETE_ROOM_INFO',\n  room\n})\n\nexport const addMessage = message => ({\n  type: 'ADD_MESSAGE',\n  message\n})\n\nexport const addMessages = (room, messages) => ({\n  type: 'ADD_MESSAGES',\n  room,\n  messages\n})\n\nexport const addUserToRoom = (room, user) => ({\n  type: 'ADD_USER_TO_ROOM',\n  room,\n  user\n})\n\nexport const removeUserFromRoom = (room, user) => ({\n  type: 'REMOVE_USER_FROM_ROOM',\n  room,\n  user\n})\n\nexport const setRoomLoading = (room, isLoading) => ({\n  type: 'SET_ROOM_LOADING',\n  room,\n  isLoading\n})\n\nexport const setRoomNewMessage = (room, newMessage) => ({\n  type: 'SET_ROOM_NEW_MESSAGE',\n  room,\n  newMessage\n})\n","import socketIOClient from 'socket.io-client';\n\nexport default socketIOClient('http://127.0.0.1:4000');\n","import styled from 'styled-components';\n\nexport default styled.div`\n\tdisplay: flex;\n\tposition: absolute;\n\tfont-family: \"Geneva\";\n\theight: 100vh;\n\tmin-width: 100vw;\n`\n","import styled from 'styled-components';\n\nexport default styled.div`\n  width: 20%;\n  background-color: rgba(0,0,20,0.04);\n  border-right: 1px solid rgb(52,73,94, 0.3);\n`\n","import styled from 'styled-components';\n\nexport default styled.button`\n  margin: 5px;\n  color: white;\n  width: 70px;\n  background-color: #34495e;\n  border: 1px solid #34495e;\n  font-size: .9em;\n  border-radius: 4px;\n  :hover {\n    background-color: #425ff4;\n  }\n  :active{\n    background-color: #34495e;\n  }\n`\n","import { connect } from 'react-redux';\nimport { updateUser, deleteRoomInfo } from '../actions';\nimport LogOut from '../components/LogOut';\n\nconst mapState = state => ({\n  user: state.user,\n  rooms: state.rooms\n})\n\nconst mapDispatch = dispatch => ({\n  updateUser: user => dispatch(updateUser(user)),\n  deleteRoomInfo: room => dispatch(deleteRoomInfo(room))\n})\n\nexport default connect(mapState, mapDispatch)(LogOut);\n","import React from 'react';\nimport socket from '../connectSocket';\nimport StyledLogOut from '../styles/LogOut';\n\nexport default ({user, rooms, updateUser, deleteRoomInfo}) => {\n  return (\n    <StyledLogOut onClick={()=>{\n      rooms.forEach(room => {\n        socket.emit('leave room', room)\n      })\n      updateUser({...user, name: ''});\n    }}>Log out</StyledLogOut>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 5px;\n`\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport UsersInRoom from '../components/UsersInRoom';\n\nconst mapState = state => {\n  const room = state.rooms[state.activeRoom]\n  if(state.roomInfo[room] && room!=='') {\n    let users = state.roomInfo[state.rooms[state.activeRoom]].users\n    return {\n      users: users.map(user => <div>{user.name}</div>)\n    }\n  } else {\n    return {}\n  }\n}\n\nexport default connect(mapState)(UsersInRoom)\n","import React from 'react';\nimport StyledUsersInRoom from '../styles/UsersInRoom';\n\nexport default ({users}) => {\n  return (\n    <StyledUsersInRoom>\n      Users in room:\n      {users}\n    </StyledUsersInRoom>\n  )\n}\n","import { connect } from 'react-redux';\nimport SideBar from '../components/SideBar';\n\nconst mapState = state => ({\n  user: state.user\n})\n\nexport default connect(mapState)(SideBar);\n","import React from 'react';\nimport StyledSideBar from '../styles/SideBar';\nimport LogOut from '../containers/LogOut';\nimport UsersInRoom from '../containers/UsersInRoom';\n\nexport default ({user}) => {\n  return (\n    <StyledSideBar>\n      {user.name&&\n        <>\n          <LogOut />\n          <UsersInRoom />\n        </>\n      }\n    </StyledSideBar>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.form`\n  display: flex;\n  justify-content: space-between;\n  height: 50px;\n  margin: 8px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: inset 0 1px 3px rgba(0,0,0,0.06), 0 1px 1px rgba(255,255,255,0.2);\n  input {\n    width: 100%;\n    padding: 0 10px;\n    font-size: 1em;\n    background-color: rgba(255,255,255,.5);\n    border-radius: 4px 0px 0px 4px;\n    border: 1px solid rgba(0,0,0,0.16);\n    border-right: none;\n  }\n  button {\n\t\theight: 100%;\n    width: 70px;\n\t\tbackground-color: #34495e;\n    border: 1px solid #34495e;\n    font-size: .9em;\n    border-radius: 0px 4px 4px 0px;\n    :hover {\n      background-color: #425ff4;\n    }\n    :active{\n      background-color: #34495e;\n    }\n    span{\n      text-align: center;\n      margin: auto;\n      color: white;\n      padding: 0 5px;\n    }\n  }\n`\n","import React, { useState } from 'react';\nimport StyledInputAndSubmit from '../styles/InputAndSubmit';\n\nexport default ({placeholder, buttonText, onClick}) => {\n  const [value, setValue] = useState('');\n\n  const submitFunction = e => {\n    e.preventDefault();\n    if(value!=='') {\n      onClick(value);\n      setValue('')\n    }\n  }\n\n  return (\n    <StyledInputAndSubmit>\n      <input type=\"text\" placeholder={placeholder} value={value} onChange={e=>setValue(e.target.value)} />\n      <button onClick={submitFunction}>\n        <span>{buttonText}</span>\n      </button>\n    </StyledInputAndSubmit>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  text-align: center;\n  margin: auto;\n`\n","import { connect } from 'react-redux';\nimport { updateUser } from '../actions';\nimport EnterName from '../components/EnterName';\n\nconst mapState = state => ({\n  user: state.user\n})\n\nconst mapDispatch = dispatch => ({\n  updateUser: user => dispatch(updateUser(user))\n})\n\nexport default connect(mapState, mapDispatch)(EnterName)\n","import React from 'react';\nimport InputAndSubmit from './InputAndSubmit';\nimport StyledEnterName from '../styles/EnterName';\n\nexport default ({updateUser, user}) => {\n  return (\n    <StyledEnterName>\n      Enter your name to get started\n      <InputAndSubmit\n        placeholder=\"Enter your name\"\n        buttonText=\"Submit\"\n        onClick={name => updateUser({...user, name})}\n      />\n    </StyledEnterName>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: grid;\n  width: 80%;\n  grid-template-rows: auto 1fr auto;\n  grid-template-columns: 1fr;\n`\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: grid;\n  overflow: hidden;\n  grid-auto-columns: minmax(0, 100px);\n  grid-auto-flow: column;\n  height: 60px;\n  border-bottom: 1px solid rgb(52,73,94, 0.3);\n`\n","import styled from 'styled-components';\n\nexport default styled.div`\n  position: relative;\n  display: inline-block;\n  background-color: rgba(0,0,20,0.04);\n  max-width: 100px;\n  border-right: 1px solid rgb(52,73,94, 0.3);\n  overflow: hidden;\n  .is-active {\n    color: #44a6c6\n  }\n  :hover {\n    background-color: rgba(0,0,20,0.1);\n  }\n  :active {\n    background-color: rgba(0,0,20,0.04);\n  }\n  button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 1;\n    color: white;\n    background-color: #34495e;\n    border: 1px solid #34495e;\n    font-size: .9em;\n    border-radius: 0 0 0 4px;\n    :hover {\n      background-color: #425ff4;\n    }\n    :active{\n      background-color: #34495e;\n    }\n  }\n  div {\n    padding: 5px;\n    white-space: nowrap;\n  }\n  span span {\n    padding: 5px;\n    font-size: 1.5em;\n    line-height: 1em \n  }\n`\n","import { connect } from 'react-redux';\nimport { deleteRoom, updateActiveRoom, deleteRoomInfo, setRoomNewMessage } from '../actions'\nimport Tab from '../components/Tab';\n\nconst mapState = (state, ownProps) => {\n  let newMessage = false;\n  if(state.roomInfo[ownProps.room]) {\n    newMessage = state.roomInfo[ownProps.room].newMessage;\n  }\n  return {\n    activeRoom: state.activeRoom,\n    rooms: state.rooms,\n    user: state.user,\n    room: ownProps.room,\n    index: ownProps.index,\n    newMessage\n  }\n}\n\nconst mapDispatch  = dispatch => ({\n  updateActiveRoom: index => dispatch(updateActiveRoom(index)),\n  deleteRoom: index => dispatch(deleteRoom(index)),\n  deleteRoomInfo: room => dispatch(deleteRoomInfo(room)),\n  setRoomNewMessage: (room, newMessage) => dispatch(setRoomNewMessage(room, newMessage))\n})\n\nexport default connect(mapState, mapDispatch)(Tab);\n","import React,{ useEffect } from 'react';\nimport socket from '../connectSocket';\nimport StyledTab from '../styles/Tab'\n\nexport default ({index, room, user, rooms, activeRoom, newMessage,\n  updateActiveRoom, deleteRoom, deleteRoomInfo, setRoomNewMessage}) => {\n\n  const leaveRoom =  e => {\n    if(index===activeRoom) {\n      if(rooms.length===1) {\n        updateActiveRoom(null);\n      } else if(index===rooms.length-1) {\n        updateActiveRoom(index-1);\n      } else {\n        updateActiveRoom(index);\n      }\n      deleteRoom(index);\n    } else {\n      if(index < activeRoom) {\n        updateActiveRoom(activeRoom-1)\n      }\n      deleteRoom(index);\n    }\n    const newRooms = rooms.slice();\n    newRooms.splice(index, 1);\n    if(!newRooms.includes(room)) {\n      if(room!=='') {\n        deleteRoomInfo(room);\n        socket.emit('leave room', room, user)\n      }\n    }\n    e.stopPropagation();\n  }\n\n  useEffect(()=>{\n    setRoomNewMessage(rooms[activeRoom], false);\n  },[activeRoom, rooms])\n\n  return (\n    <StyledTab onClick={()=> updateActiveRoom(index)}>\n      <span>\n        <button onClick={leaveRoom}>x</button>\n        {newMessage && <span style={{color: 'red'}}>.</span>}\n          </span>\n          <br />\n      <div className={index===activeRoom&&'is-active'}>{room ? room : 'New Room'}</div>\n    </StyledTab>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  text-align: center;\n  font-size: 2em;\n  border-right: 3px solid white;\n  background-color: rgba(0,0,20,0.04);\n  :hover {\n    background-color: rgba(0,0,20,0.1);\n  }\n  :active {\n    background-color: rgba(0,0,20,0.04);\n  }\n`\n","import { connect } from 'react-redux';\nimport { addRoom, updateActiveRoom } from '../actions';\nimport TabNew from '../components/TabNew';\n\nconst mapState = state => ({\n  rooms: state.rooms\n})\n\nconst mapDispatch = dispatch => ({\n  addRoom: () => dispatch(addRoom()),\n  updateActiveRoom: index => dispatch(updateActiveRoom(index))\n})\n\nexport default connect(mapState, mapDispatch)(TabNew);\n","import React from 'react';\nimport StyledTabNew from '../styles/TabNew';\n\nexport default ({rooms, addRoom, updateActiveRoom}) => {\n   const newTab = () => {\n     addRoom();\n     updateActiveRoom(rooms.length)\n   }\n\n  return(\n    <StyledTabNew onClick={newTab}>\n      <span>+</span>\n    </StyledTabNew>\n  )\n}\n","import { connect } from 'react-redux';\nimport TabBar from '../components/TabBar';\n\nconst mapState = state => ({\n  rooms: state.rooms,\n})\n\nexport default connect(mapState)(TabBar);\n","import React from 'react';\nimport { generate } from 'shortid';\nimport StyledTabBar from '../styles/TabBar';\nimport Tab from '../containers/Tab';\nimport TabNew from '../containers/TabNew';\n\nexport default ({rooms}) => {\n\n  const roomTabs = rooms.map((room, index) => <Tab key={generate()} room={room} index={index} />)\n\n  return(\n    <StyledTabBar>\n      {roomTabs}\n      <TabNew />\n    </StyledTabBar>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  text-align: center;\n  margin: auto;\n`\n","import { connect } from 'react-redux';\nimport { addRoom, updateRoom, updateActiveRoom, setRoomLoading } from '../actions';\nimport JoinRoom from '../components/JoinRoom';\n\nconst mapState = state => ({\n  rooms: state.rooms,\n  user: state.user\n})\n\nconst mapDispatch = dispatch => ({\n  updateRoom: room => dispatch(updateRoom(room)),\n  addRoom: () => dispatch(addRoom()),\n  updateActiveRoom: index => dispatch(updateActiveRoom(index)),\n  setRoomLoading: (room, isLoading) => dispatch(setRoomLoading(room, isLoading))\n})\n\nexport default connect(mapState, mapDispatch)(JoinRoom);\n","import React from 'react';\nimport socket from '../connectSocket';\nimport InputAndSubmit from './InputAndSubmit';\nimport StyledJoinRoom from '../styles/JoinRoom';\n\nexport default ({rooms, user, addRoom, updateActiveRoom, updateRoom, setRoomLoading}) => {\n  const joinRoom = room => {\n    if(!rooms.includes(room) && room!==''){\n      socket.emit('join room', room, user);\n      socket.emit('get messages', room);\n      if(rooms.length<1) {\n        addRoom();\n        updateActiveRoom(0);\n      }\n      updateRoom(room);\n    }\n  }\n\n  return (\n    <StyledJoinRoom>\n      <InputAndSubmit\n        placeholder=\"Join Room\"\n        buttonText=\"Join\"\n        onClick={joinRoom}\n      />\n    </StyledJoinRoom>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-auto-rows: auto;\n  overflow-y: scroll;\n  width: 100%;\n`\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin: 5px;\n  .outer {\n    padding: 5px;\n    display: inline-block;\n    border-radius: 5px;\n    background-color: rgba(0,0,20,0.04);\n  }\n  .inner {\n    font-size: .7em\n  }\n  .name {\n    color: #44a6c6\n  }\n`\n","import styled from 'styled-components';\n\nexport default styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  div {\n    margin: auto 5px;\n    width: 9px;\n    height: 9px;\n    background-color: #34495e;\n    border-radius: 100%;\n    -webkit-animation: sk-bouncedelay 1.4s infinite ease both;\n    animation: sk-bouncedelay 1.4s infinite ease both;\n  }\n  .bounce1 {\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n  }\n  .bounce2 {\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n  }\n  @-webkit-keyframes sk-bouncedelay {\n    0%, 100% { -webkit-transform: scale(0) }\n    50% { -webkit-transform: scale(1.0) }\n  }\n  @keyframes sk-bouncedelay {\n    0%, 100% {\n      -webkit-transform: scale(0);\n      transform: scale(0);\n    } 50% {\n      -webkit-transform: scale(1.0);\n      transform: scale(1.0);\n    }\n  }\n`\n","import React from 'react';\nimport StyledLoadingDots from '../styles/LoadingDots';\n\nexport default () => {\n  return(\n    <StyledLoadingDots>\n      <div className=\"bounce1\"></div>\n      <div className=\"bounce2\"></div>\n      <div className=\"bounce3\"></div>\n    </StyledLoadingDots>\n  )\n}\n","import { connect } from 'react-redux';\nimport Messages from '../components/Messages';\nimport React from 'react';\n\nconst mapState = state => {\n  const room = state.rooms[state.activeRoom];\n  const loading = state.roomInfo[room].loading;\n  let dateInt = null;\n  if(state.roomInfo[room].messages[0]) {\n    dateInt = state.roomInfo[room].messages[0].dateTime.dateInt;\n  }\n  const messages = state.roomInfo[room].messages\n  return {\n    loading,\n    messages,\n    room,\n    dateInt\n  }\n}\n\nexport default connect(mapState)(Messages)\n","import React, { useEffect, useRef, useState, useLayoutEffect } from 'react';\nimport socket from '../connectSocket';\nimport StyledMessages from '../styles/Messages';\nimport StyledMessage from '../styles/Message';\nimport generate from 'shortid';\nimport LoadingDots from './LoadingDots';\n\nexport default ({messages, room, dateInt, loading}) => {\n\n  const container = useRef({current: {scrollHeight: 0}});\n  const bottomDiv = useRef(null);\n  let newMessage = '';\n  if(messages[messages.length-1]) {\n    newMessage = messages[messages.length-1].dateTime.dateInt;\n  }\n\n  const [scrollBottom, setScrollBottom] = useState(0);\n  const [loadingOldMessages, setLoadingOldMessages] = useState(false);\n\n  const handleScroll = e => {\n    const scrollBottom = e.target.scrollHeight - (e.target.clientHeight + e.target.scrollTop);\n    setScrollBottom(scrollBottom);\n    if(e.target.scrollTop===0) {\n      socket.emit('get messages', room, dateInt);\n      setLoadingOldMessages(true);\n    }\n  }\n\n  useEffect(()=>{\n    const loadingDone = () => setLoadingOldMessages(false);\n    socket.on('loading done', loadingDone);\n    return () => socket.removeListener('loading done', loadingDone);\n  }, [])\n\n  useLayoutEffect(()=>{\n    if(true) {\n      container.current.scrollTop = (container.current.scrollHeight - 25) - (scrollBottom + container.current.clientHeight);\n    }\n  }, [loadingOldMessages])\n\n  useLayoutEffect(()=>{\n    if(!loading) {\n      bottomDiv.current.scrollIntoView();\n    }\n  },[newMessage, loading])\n\n  const displayMessages = messages.map(message => {\n    return (\n      <StyledMessage key={generate()}>\n        <div className=\"outer\">\n          <span className=\"name\">{message.userName}</span> <span className=\"inner\">{message.dateTime.dateString}</span> <br />\n          {message.msg}\n        </div>\n      </StyledMessage>\n    )\n  })\n\n  return (\n    <StyledMessages ref={container} onScroll={handleScroll}>\n      {loading ?\n        <LoadingDots /> :\n        <>\n          {loadingOldMessages && <LoadingDots />}\n          <>\n            <div></div>\n            {displayMessages}\n            <div ref={bottomDiv}></div>\n          </>\n        </>\n      }\n    </StyledMessages>\n  )\n}\n","import styled from 'styled-components';\n\nexport default styled.div`\n  background-color: rgba(0,0,20,0.04);\n`\n","import { connect } from 'react-redux';\nimport SendMessage from '../components/SendMessage';\n\nconst mapState = state => {\n  const room = state.rooms[state.activeRoom];\n  return {\n    room,\n    user: state.user\n  }\n}\n\nexport default connect(mapState)(SendMessage);\n","import React from 'react';\nimport socket from '../connectSocket';\nimport getDateTime from '../getDateTime';\nimport InputAndSubmit from './InputAndSubmit';\nimport StyledSendMessage from '../styles/SendMessage';\n\nexport default ({room, user}) => {\n  const sendMessage = msg => {\n    let userName = user.name;\n    let dateTime = getDateTime();\n    socket.emit('chat message', {room, msg, userName, dateTime})\n  }\n  return (\n    <StyledSendMessage>\n      <InputAndSubmit\n        placeholder=\"Write a message..\"\n        buttonText=\"Send\"\n        onClick={sendMessage}\n      />\n    </StyledSendMessage>\n  )\n}\n","export default () => {\n  let today = new Date();\n\n  let hour = today.getHours();\n  let minute = today.getMinutes();\n  let day = today.getDate();\n  let month = today.getMonth() + 1;\n  let year = today.getFullYear();\n  if (minute < 10) {\n    minute = '0' + minute;\n  }\n  if (hour < 10) {\n    hour = '0' + hour;\n  }\n  if (day < 10) {\n    day = '0' + day;\n  }\n  if (month < 10) {\n    month = '0' + month;\n  }\n  return {\n    dateString:`${day}/${month}/${year} ${hour}:${minute}`,\n    dateInt: Date.now()\n  }\n}\n","import { connect } from 'react-redux';\nimport ChatArea from '../components/ChatArea'\n\nconst mapState = state => ({\n  inRoom: state.rooms[state.activeRoom],\n  activeRoom: state.activeRoom,\n  rooms: state.rooms\n})\n\nexport default connect(mapState)(ChatArea)\n","import React from 'react';\nimport StyledChatArea from '../styles/ChatArea';\nimport TabBar from '../containers/TabBar';\nimport JoinRoom from '../containers/JoinRoom';\nimport Messages from '../containers/Messages';\nimport SendMessage from '../containers/SendMessage';\n\nexport default ({inRoom, activeRoom, rooms}) => {\n\n  return (\n    <StyledChatArea>\n      <TabBar />\n      {inRoom?\n        <Messages />:\n        <JoinRoom />}\n      {rooms[activeRoom]&&<SendMessage />}\n    </StyledChatArea>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport socket from './connectSocket';\nimport StyledApp from './styles/App';\nimport SideBar from './containers/SideBar';\nimport EnterName from './containers/EnterName';\nimport ChatArea from './containers/ChatArea';\n\nconst App = ({\n\ttitle, user, rooms, activeRoom, roomInfo,\n\taddMessage, addMessages, addUserToRoom, removeUserFromRoom, setRoomLoading, setRoomNewMessage}) => {\n\n\tconst [notification, setNotification] = useState('');\n\n\tuseEffect(()=>{\n\t\tconst handleVisibilityChange = () => {\n\t\t\tif(!document.hidden) {\n\t\t\t\tsetNotification('')\n\t\t\t}\n\t\t}\n\t\tdocument.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\t\ttitle ? document.title = title + notification : document.title = 'Chat App '+ notification;\n\t\treturn () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n\t}, [title, notification])\n\n\tuseEffect(()=>{\n\t\tconst state = {\n\t\t\tuser: {name: user.name},\n\t\t\trooms,\n\t\t\tactiveRoom\n\t\t}\n\t\ttry {\n\t\t\tconst serializedState = JSON.stringify(state);\n\t\t\tlocalStorage.setItem('state', serializedState)\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}, [user, rooms, activeRoom])\n\n\tuseEffect(()=>{\n\t\t\trooms.forEach(room => {\n\t\t\t\tif(room!==''&&user.name!==''){\n\t\t\t\t\tsetRoomLoading(room, true)\n\t\t\t\t\tsocket.emit('join room', room, user);\n\t\t\t\t\tif(!roomInfo[room].messages.length) {\n\t\t\t\t\t\tsocket.emit('get messages', room);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t}, [user])\n\n\tuseEffect(()=>{\n\t\tsocket.on('user joined', (room, newUser) => {\n\t\t\taddUserToRoom(room, newUser);\n\t\t\tsocket.emit('user joined reply', room, user, newUser);\n\t\t})\n\t\tsocket.on('get users in room', (room, newUser) => {\n\t\t\taddUserToRoom(room, newUser);\n\t\t})\n\t\tsocket.on('get messages', (room, messages) => {\n\t\t\tif(messages.length) {\n\t\t\t\tmessages.reverse();\n\t\t\t\taddMessages(room, messages);\n\t\t\t}\n\t\t\tsetRoomLoading(room, false)\n\t\t})\n\t\tsocket.on('user left', (room, id) => {\n\t\t\tremoveUserFromRoom(room, id)\n\t\t})\n\t\treturn () => socket.removeAllListeners()\n\t}, [user])\n\n\tuseEffect(()=>{\n\t\tconst handleMessage = message => {\n\t\t  addMessage(message);\n\t\t\tif(message.room !== rooms[activeRoom]) {\n\t\t\t\tsetRoomNewMessage(message.room, true);\n\t\t\t}\n\t\t\tif(document.hidden) {\n\t\t\t\tsetNotification(' (new)');\n\t\t\t}\n\t\t}\n\t\tsocket.on('chat message', handleMessage);\n\t\treturn () => socket.removeListener('chat message', handleMessage);\n\t}, [rooms, activeRoom])\n\n  return (\n\t\t<StyledApp>\n\t\t\t{user.name===''?\n\t\t\t\t<EnterName />:\n\t\t\t\t<>\n\t\t\t\t\t<SideBar />\n\t\t\t\t\t<ChatArea />\n\t\t\t\t</>\n\t\t\t}\n\t\t</StyledApp>\n\t)\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { addMessage, addMessages, addUserToRoom, removeUserFromRoom, setRoomLoading, setRoomNewMessage } from '../actions';\nimport App from '../App.js';\n\nconst mapState = state => {\n  const title = state.rooms[state.activeRoom] || 'Chat App';\n  return {\n    title,\n    user: state.user,\n    rooms: state.rooms,\n    activeRoom: state.activeRoom,\n    roomInfo: state.roomInfo\n  }\n}\n\nconst mapDispatch = dispatch => ({\n  addMessage: message => dispatch(addMessage(message)),\n  addMessages: (room, messages) => dispatch(addMessages(room, messages)),\n  addUserToRoom: (room, user) => dispatch(addUserToRoom(room, user)),\n  removeUserFromRoom: (room, user) => dispatch(removeUserFromRoom(room, user)),\n  setRoomLoading: (room, isLoading) => dispatch(setRoomLoading(room, isLoading)),\n  setRoomNewMessage: (room, newMessage) => dispatch(setRoomNewMessage(room, newMessage))\n})\n\nexport default connect(mapState, mapDispatch)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider }from 'react-redux';\nimport { createStore } from 'redux';\nimport loadState from './loadState';\nimport reducer from './reducers';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistedState = loadState()\n\nconst store = createStore(reducer, persistedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true}));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","export default () => {\n  try {\n    let serializedState = localStorage.getItem('state');\n    serializedState = JSON.parse(serializedState);\n    if(serializedState.rooms.length<1) {\n      serializedState.roomInfo = {};\n    } else {\n      let roomInfo = {};\n      serializedState.roomInfo = serializedState.rooms.forEach(room => {\n        if(room!==''){\n          roomInfo[room] = {loading: true, users: [], messages: [], newMessage: false};\n        }\n      })\n      serializedState.roomInfo = roomInfo;\n    }\n    return serializedState;\n  } catch (err) {\n    return undefined;\n  }\n};\n"],"sourceRoot":""}