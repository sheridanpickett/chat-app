{"ast":null,"code":"var _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/components/TabBar.js\";\nimport React from 'react';\nimport Tab from './Tab';\n\nconst TabBar = ({\n  rooms,\n  activeRoom,\n  updateActiveRoom,\n  deleteRoom\n}) => {\n  const deleteAndUpdate = () => {\n    if (index == activeRoom.index) {\n      if (rooms.length == 1) {\n        updateActiveRoom('', '');\n      } else if (index == rooms.length - 1) {\n        updateActiveRoom(rooms[index - 1], index - 1);\n      } else {\n        updateActiveRoom(rooms[index + 1], index);\n      }\n\n      deleteRoom(index);\n    } else {\n      if (index < activeRoom.index) {\n        updateActiveRoom(activeRoom.room, activeRoom.index - 1);\n      }\n\n      deleteRoom(index);\n    }\n  };\n\n  update = () => {\n    if (index === activeRoom.index) {\n      updateActiveRoom(room, index);\n    }\n  };\n\n  const roomTabs = rooms.map((room, index) => {\n    if (index == activeRoom.index) {\n      return React.createElement(Tab, {\n        room: room,\n        deleteAndUpdate: () => deleteAndUpdate(index, rooms, activeRoom),\n        update: () => update(index, room, activeRoom),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, roomTabs);\n};\n\nexport default TabBar;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/components/TabBar.js"],"names":["React","Tab","TabBar","rooms","activeRoom","updateActiveRoom","deleteRoom","deleteAndUpdate","index","length","room","update","roomTabs","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,gBAApB;AAAsCC,EAAAA;AAAtC,CAAD,KAAuD;AAEpE,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAGC,KAAK,IAAIJ,UAAU,CAACI,KAAvB,EAA8B;AAC5B,UAAGL,KAAK,CAACM,MAAN,IAAgB,CAAnB,EAAsB;AACpBJ,QAAAA,gBAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB;AACD,OAFD,MAEO,IAAGG,KAAK,IAAIL,KAAK,CAACM,MAAN,GAAa,CAAzB,EAA4B;AACjCJ,QAAAA,gBAAgB,CAACF,KAAK,CAACK,KAAK,GAAC,CAAP,CAAN,EAAiBA,KAAK,GAAC,CAAvB,CAAhB;AACD,OAFM,MAEA;AACLH,QAAAA,gBAAgB,CAACF,KAAK,CAACK,KAAK,GAAC,CAAP,CAAN,EAAiBA,KAAjB,CAAhB;AACD;;AACDF,MAAAA,UAAU,CAACE,KAAD,CAAV;AACD,KATD,MASO;AACL,UAAGA,KAAK,GAAGJ,UAAU,CAACI,KAAtB,EAA4B;AAC1BH,QAAAA,gBAAgB,CAACD,UAAU,CAACM,IAAZ,EAAkBN,UAAU,CAACI,KAAX,GAAiB,CAAnC,CAAhB;AACD;;AACDF,MAAAA,UAAU,CAACE,KAAD,CAAV;AACD;AACF,GAhBD;;AAkBAG,EAAAA,MAAM,GAAG,MAAM;AACb,QAAGH,KAAK,KAAKJ,UAAU,CAACI,KAAxB,EAA+B;AAC7BH,MAAAA,gBAAgB,CAACK,IAAD,EAAOF,KAAP,CAAhB;AACD;AACF,GAJD;;AAMA,QAAMI,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAU,CAACH,IAAD,EAAOF,KAAP,KAAiB;AAC1C,QAAGA,KAAK,IAAIJ,UAAU,CAACI,KAAvB,EAA6B;AAC3B,aACE,oBAAC,GAAD;AACE,QAAA,IAAI,EAAEE,IADR;AAEE,QAAA,eAAe,EAAE,MAAIH,eAAe,CAACC,KAAD,EAAQL,KAAR,EAAeC,UAAf,CAFtC;AAGE,QAAA,MAAM,EAAE,MAAIO,MAAM,CAACH,KAAD,EAAQE,IAAR,EAAcN,UAAd,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;AACF,GAVgB,CAAjB;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMQ,QAAN,CADF;AAGD,CAxCD;;AA0CA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport Tab from './Tab'\n\nconst TabBar = ({rooms, activeRoom, updateActiveRoom, deleteRoom}) => {\n\n  const deleteAndUpdate = () => {\n    if(index == activeRoom.index) {\n      if(rooms.length == 1) {\n        updateActiveRoom('', '')\n      } else if(index == rooms.length-1) {\n        updateActiveRoom(rooms[index-1], index-1)\n      } else {\n        updateActiveRoom(rooms[index+1], index)\n      }\n      deleteRoom(index);\n    } else {\n      if(index < activeRoom.index){\n        updateActiveRoom(activeRoom.room, activeRoom.index-1)\n      }\n      deleteRoom(index);\n    }\n  }\n\n  update = () => {\n    if(index === activeRoom.index) {\n      updateActiveRoom(room, index)\n    }\n  }\n\n  const roomTabs = rooms.map((room, index) => {\n    if(index == activeRoom.index){\n      return (\n        <Tab\n          room={room}\n          deleteAndUpdate={()=>deleteAndUpdate(index, rooms, activeRoom)}\n          update={()=>update(index, room, activeRoom)} \n        />\n      )\n    }\n  })\n  return (\n    <div>{roomTabs}</div>\n  )\n}\n\nexport default TabBar;\n"]},"metadata":{},"sourceType":"module"}