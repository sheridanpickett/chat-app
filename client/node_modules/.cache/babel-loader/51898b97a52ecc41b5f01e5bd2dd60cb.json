{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sheridan/Desktop/react-socket/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/components/TabBar.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 60px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Tab from './Tab';\nimport styled from 'styled-components';\nconst StyledTabBar = styled.div(_templateObject());\n\nconst TabBar = ({\n  rooms,\n  activeRoom,\n  updateActiveRoom,\n  deleteRoom\n}) => {\n  const deleteAndUpdate = (index, rooms, activeRoom) => {\n    if (index == activeRoom.index) {\n      if (rooms.length == 1) {\n        updateActiveRoom('', '');\n      } else if (index == rooms.length - 1) {\n        updateActiveRoom(rooms[index - 1], index - 1);\n      } else {\n        updateActiveRoom(rooms[index + 1], index);\n      }\n\n      deleteRoom(index);\n    } else {\n      if (index < activeRoom.index) {\n        updateActiveRoom(activeRoom.room, activeRoom.index - 1);\n      }\n\n      deleteRoom(index);\n    }\n  };\n\n  const roomTabs = rooms.map((room, index) => {\n    return React.createElement(Tab, {\n      room: room,\n      isActive: index == activeRoom.index,\n      deleteAndUpdate: () => deleteAndUpdate(index, rooms, activeRoom),\n      update: () => updateActiveRoom(room, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  });\n  return React.createElement(StyledTabBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, roomTabs);\n};\n\nexport default TabBar;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/components/TabBar.js"],"names":["React","Tab","styled","StyledTabBar","div","TabBar","rooms","activeRoom","updateActiveRoom","deleteRoom","deleteAndUpdate","index","length","room","roomTabs","map"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAV,mBAAlB;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,gBAApB;AAAsCC,EAAAA;AAAtC,CAAD,KAAuD;AAEpE,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQL,KAAR,EAAeC,UAAf,KAA8B;AACpD,QAAGI,KAAK,IAAIJ,UAAU,CAACI,KAAvB,EAA8B;AAC5B,UAAGL,KAAK,CAACM,MAAN,IAAgB,CAAnB,EAAsB;AACpBJ,QAAAA,gBAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB;AACD,OAFD,MAEO,IAAGG,KAAK,IAAIL,KAAK,CAACM,MAAN,GAAa,CAAzB,EAA4B;AACjCJ,QAAAA,gBAAgB,CAACF,KAAK,CAACK,KAAK,GAAC,CAAP,CAAN,EAAiBA,KAAK,GAAC,CAAvB,CAAhB;AACD,OAFM,MAEA;AACLH,QAAAA,gBAAgB,CAACF,KAAK,CAACK,KAAK,GAAC,CAAP,CAAN,EAAiBA,KAAjB,CAAhB;AACD;;AACDF,MAAAA,UAAU,CAACE,KAAD,CAAV;AACD,KATD,MASO;AACL,UAAGA,KAAK,GAAGJ,UAAU,CAACI,KAAtB,EAA4B;AAC1BH,QAAAA,gBAAgB,CAACD,UAAU,CAACM,IAAZ,EAAkBN,UAAU,CAACI,KAAX,GAAiB,CAAnC,CAAhB;AACD;;AACDF,MAAAA,UAAU,CAACE,KAAD,CAAV;AACD;AACF,GAhBD;;AAkBA,QAAMG,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAU,CAACF,IAAD,EAAOF,KAAP,KAAiB;AACxC,WACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,QAAQ,EAAEF,KAAK,IAAEJ,UAAU,CAACI,KAF9B;AAGE,MAAA,eAAe,EAAE,MAAID,eAAe,CAACC,KAAD,EAAQL,KAAR,EAAeC,UAAf,CAHtC;AAIE,MAAA,MAAM,EAAE,MAAIC,gBAAgB,CAACK,IAAD,EAAOF,KAAP,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATc,CAAjB;AAWA,SAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeG,QAAf,CAAP;AACD,CAhCD;;AAkCA,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport Tab from './Tab';\nimport styled from 'styled-components';\n\nconst StyledTabBar = styled.div`\n  display: flex;\n  height: 60px;\n`\n\nconst TabBar = ({rooms, activeRoom, updateActiveRoom, deleteRoom}) => {\n\n  const deleteAndUpdate = (index, rooms, activeRoom) => {\n    if(index == activeRoom.index) {\n      if(rooms.length == 1) {\n        updateActiveRoom('', '')\n      } else if(index == rooms.length-1) {\n        updateActiveRoom(rooms[index-1], index-1)\n      } else {\n        updateActiveRoom(rooms[index+1], index)\n      }\n      deleteRoom(index);\n    } else {\n      if(index < activeRoom.index){\n        updateActiveRoom(activeRoom.room, activeRoom.index-1)\n      }\n      deleteRoom(index);\n    }\n  }\n\n  const roomTabs = rooms.map((room, index) => {\n      return (\n        <Tab\n          room={room}\n          isActive={index==activeRoom.index}\n          deleteAndUpdate={()=>deleteAndUpdate(index, rooms, activeRoom)}\n          update={()=>updateActiveRoom(room, index)}\n        />\n      )\n    }\n  )\n  return <StyledTabBar>{roomTabs}</StyledTabBar>\n}\n\nexport default TabBar;\n"]},"metadata":{},"sourceType":"module"}