{"ast":null,"code":"var _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient('http://127.0.0.1:4000');\nimport LoadingDots from './components/LoadingDots';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      message: '',\n      name: '',\n      id: '',\n      location: {}\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log('SUCCESS ', position);\n      this.setState({\n        location: {\n          lon: position.coords.longitude,\n          lat: position.coords.latitude\n        }\n      });\n    });\n    socket.on('connect', () => {\n      this.setState({\n        id: socket.id\n      });\n    }); // socket.emit('create', prompt());\n\n    socket.on('chat message', msg => {\n      this.setState(previousState => ({\n        messages: [...previousState.messages, msg]\n      }));\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: ({\n        target\n      }) => this.setState({\n        message: target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => {\n        e.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })) // \t<form>\n    // \t\t<input type=\"text\" value={this.state.message} onChange={ ({target}) => this.setState({message: target.value}) } />\n    // \t\t<button type=\"submit\" onClick={e => {\n    // \t\t\te.preventDefault();\n    // \t\t\tsocket.emit('chat message', this.state.message);\n    // \t\t\tthis.setState({message: \"\"})\n    // \t\t}} />\n    // \t</form>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/App.js"],"names":["React","Component","socketIOClient","socket","LoadingDots","App","state","messages","message","name","id","location","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","log","setState","lon","coords","longitude","lat","latitude","on","msg","previousState","render","target","value","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,MAAM,GAAGD,cAAc,CAAC,uBAAD,CAA7B;AACA,OAAOE,WAAP,MAAwB,0BAAxB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,OAAO,EAAE,EAFF;AAGPC,MAAAA,IAAI,EAAE,EAHC;AAIPC,MAAAA,EAAE,EAAE,EAJG;AAKPC,MAAAA,QAAQ,EAAE;AALH,KADmB;AAAA;;AAS3BC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,WAAKG,QAAL,CAAc;AACbR,QAAAA,QAAQ,EAAE;AACTS,UAAAA,GAAG,EAAEJ,QAAQ,CAACK,MAAT,CAAgBC,SADZ;AAETC,UAAAA,GAAG,EAAEP,QAAQ,CAACK,MAAT,CAAgBG;AAFZ;AADG,OAAd;AAMA,KARD;AAUArB,IAAAA,MAAM,CAACsB,EAAP,CAAU,SAAV,EAAqB,MAAM;AAC1B,WAAKN,QAAL,CAAc;AAACT,QAAAA,EAAE,EAAEP,MAAM,CAACO;AAAZ,OAAd;AACA,KAFD,EAXmB,CAcnB;;AACAP,IAAAA,MAAM,CAACsB,EAAP,CAAU,cAAV,EAA0BC,GAAG,IAAI;AAChC,WAAKP,QAAL,CAAcQ,aAAa,KAAK;AAC5BpB,QAAAA,QAAQ,EAAE,CAAC,GAAGoB,aAAa,CAACpB,QAAlB,EAA4BmB,GAA5B;AADkB,OAAL,CAA3B;AAGA,KAJD;AAKA;;AAEAE,EAAAA,MAAM,GAAG;AACP,WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG,IAArC;AAA2C,MAAA,QAAQ,EAAG,CAAC;AAACoB,QAAAA;AAAD,OAAD,KAAc,KAAKV,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAEqB,MAAM,CAACC;AAAjB,OAAd,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,CAAC,IAAI;AACnCA,QAAAA,CAAC,CAACC,cAAF;AACA,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAFC,CAQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfC;AAiBD;;AAjDyB;;AAoD5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient('http://127.0.0.1:4000');\nimport LoadingDots from './components/LoadingDots'\n\n\nclass App extends Component {\n\tstate = {\n\t\tmessages: [],\n\t\tmessage: '',\n\t\tname: '',\n\t\tid: '',\n\t\tlocation: {}\n\t};\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\tconsole.log('SUCCESS ', position);\n\t\t\tthis.setState({\n\t\t\t\tlocation: {\n\t\t\t\t\tlon: position.coords.longitude,\n\t\t\t\t\tlat: position.coords.latitude\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\tsocket.on('connect', () => {\n\t\t\tthis.setState({id: socket.id});\n\t\t})\n\t\t// socket.emit('create', prompt());\n\t\tsocket.on('chat message', msg => {\n\t\t\tthis.setState(previousState => ({\n\t\t\t    messages: [...previousState.messages, msg]\n\t\t\t}));\n\t\t});\n\t}\n\n  render() {\n    return (\n\n\t\t\t<form>\n\t\t\t\t<input type=\"text\" value={this.state.name} onChange={ ({target}) => this.setState({message: target.value}) } />\n\t\t\t\t<button type=\"submit\" onClick={e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}} />\n\t\t\t</form>\n\t\t\t// \t<form>\n\t\t\t// \t\t<input type=\"text\" value={this.state.message} onChange={ ({target}) => this.setState({message: target.value}) } />\n\t\t\t// \t\t<button type=\"submit\" onClick={e => {\n\t\t\t// \t\t\te.preventDefault();\n\t\t\t// \t\t\tsocket.emit('chat message', this.state.message);\n\t\t\t// \t\t\tthis.setState({message: \"\"})\n\t\t\t// \t\t}} />\n\t\t\t// \t</form>\n\t\t)\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}