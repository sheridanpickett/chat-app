{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sheridan/Desktop/react-socket/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tfont-family: \\\"Geneva\\\";\\n\\tmin-height: 100vh;\\n\\tmin-width: 100vw;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport styled from 'styled-components';\nimport LoadingDots from './components/LoadingDots';\nimport InputAndSubmit from './components/InputAndSubmit';\nimport UserTagList from './components/UserTagList';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport SplashPage from './components/SplashPage';\nconst socket = socketIOClient('http://127.0.0.1:4000');\nconst StyledWrapper = styled.div(_templateObject());\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      message: '',\n      name: '',\n      socketID: '',\n      location: {},\n      loading: true,\n      userSubmitted: false,\n      userList: [],\n      newRoomName: '',\n      room: '',\n      rooms: []\n    };\n\n    this.submitUser = async e => {\n      e.preventDefault();\n\n      if (this.state.name !== '') {\n        this.setState({\n          userSubmitted: true\n        });\n\n        try {\n          let userList = await fetch('http://127.0.0.1:4000/createUser', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: this.state.name,\n              socketID: this.state.socketID,\n              location: {\n                type: \"Point\",\n                coordinates: [this.state.location.lon, this.state.location.lat]\n              }\n            })\n          });\n          userList = await userList.json();\n          this.setState({\n            userList\n          });\n          console.log('done');\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.joinRoom = e => {\n      e.preventDefault();\n      const room = this.state.newRoomName;\n\n      if (room) {\n        socket.emit('join room', room);\n        this.setState(prevState => {\n          return {\n            rooms: [...prevState.rooms, room],\n            newRoomName: ''\n          };\n        });\n      }\n    };\n\n    this.sendMessage = e => {\n      e.preventDefault();\n\n      if (this.state.message) {\n        socket.emit('chat message', this.state.room, this.state.message);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.setName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.setNewRoomName = e => {\n      this.setState({\n        newRoomName: e.target.value\n      });\n    };\n\n    this.setMessage = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.topnav = () => {\n      let rooms = [...this.state.rooms];\n      return rooms.map(room => {\n        return React.createElement(\"div\", {\n          style: {\n            display: 'inline-block',\n            height: '30px',\n            width: '50px',\n            padding: '10px',\n            border: '1px solid white',\n            backgroundColor: 'purple'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, room);\n      });\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log('location found');\n      this.setState({\n        location: {\n          lon: position.coords.longitude,\n          lat: position.coords.latitude\n        },\n        loading: false\n      });\n    });\n    socket.on('connect', () => {\n      this.setState({\n        socketID: socket.id\n      });\n    });\n    socket.on('chat message', (room, msg) => {\n      this.setState({\n        newMessage: room + msg\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          userSubmitted = _this$state.userSubmitted,\n          name = _this$state.name,\n          message = _this$state.message,\n          messages = _this$state.messages,\n          userList = _this$state.userList,\n          room = _this$state.room,\n          rooms = _this$state.rooms,\n          newRoomName = _this$state.newRoomName;\n    return React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, loading && React.createElement(LoadingDots, {\n      text: \"Finding location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), !loading && !userSubmitted && React.createElement(InputAndSubmit, {\n      placeholder: \"Enter your name\",\n      value: name,\n      buttonText: \"Send\",\n      onChange: this.setName,\n      onClick: this.submitUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), userSubmitted && React.createElement(UserTagList, {\n      userList: userList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, !room ? React.createElement(SplashPage, {\n      onChange: this.setNewRoomName,\n      onClick: this.joinRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.topnav()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, messages), React.createElement(InputAndSubmit, {\n      placeholder: \"Write a message...\",\n      value: message,\n      buttonText: \"Send\",\n      onChange: this.setMessage,\n      onClick: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/App.js"],"names":["React","Component","socketIOClient","styled","LoadingDots","InputAndSubmit","UserTagList","SideBar","Content","SplashPage","socket","StyledWrapper","div","App","state","messages","message","name","socketID","location","loading","userSubmitted","userList","newRoomName","room","rooms","submitUser","e","preventDefault","setState","fetch","method","headers","body","JSON","stringify","type","coordinates","lon","lat","json","console","log","err","joinRoom","emit","prevState","sendMessage","setName","target","value","setNewRoomName","setMessage","topnav","map","display","height","width","padding","border","backgroundColor","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","on","id","msg","newMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport styled from 'styled-components';\nimport LoadingDots from './components/LoadingDots';\nimport InputAndSubmit from './components/InputAndSubmit';\nimport UserTagList from './components/UserTagList';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nimport SplashPage from './components/SplashPage';\n\nconst socket = socketIOClient('http://127.0.0.1:4000');\n\nconst StyledWrapper = styled.div`\n\tdisplay: flex;\n\tfont-family: \"Geneva\";\n\tmin-height: 100vh;\n\tmin-width: 100vw;\n`\n\nclass App extends Component {\n\tstate = {\n\t\tmessages: [],\n\t\tmessage: '',\n\t\tname: '',\n\t\tsocketID: '',\n\t\tlocation: {},\n\t\tloading: true,\n\t\tuserSubmitted: false,\n\t\tuserList: [],\n\t\tnewRoomName: '',\n\t\troom: '',\n\t\trooms: []\n\t};\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\tconsole.log('location found')\n\t\t\tthis.setState({\n\t\t\t\tlocation: {\n\t\t\t\t\tlon: position.coords.longitude,\n\t\t\t\t\tlat: position.coords.latitude\n\t\t\t\t},\n\t\t\t\tloading: false\n\t\t\t})\n\t\t});\n\t\tsocket.on('connect', () => {\n\t\t\tthis.setState({socketID: socket.id});\n\t\t})\n\t\tsocket.on('chat message', (room, msg) => {\n\t\t\tthis.setState({newMessage: room + msg});\n\t\t});\n\t}\n\n\tsubmitUser = async e => {\n\t\te.preventDefault()\n\t\tif (this.state.name !== ''){\n\t\t\tthis.setState({userSubmitted: true});\n\t\t\ttry {\n\t\t\t\tlet userList = await fetch('http://127.0.0.1:4000/createUser', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\tsocketID: this.state.socketID,\n\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\ttype: \"Point\",\n\t\t\t\t\t\t\tcoordinates: [this.state.location.lon, this.state.location.lat]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tuserList = await userList.json();\n\t\t\t\tthis.setState({userList})\n\t\t\t\tconsole.log('done')\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t}\n\t}\n\n\tjoinRoom = e => {\n\t\te.preventDefault();\n\t\tconst room = this.state.newRoomName;\n\t\tif(room) {\n\t\t\tsocket.emit('join room', room);\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn(\n\t\t\t\t\t{\n\t\t\t\t\t\trooms: [...prevState.rooms, room],\n\t\t\t\t\t\tnewRoomName: ''\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}\n\n\tsendMessage = e => {\n\t\te.preventDefault();\n\t\tif (this.state.message) {\n\t\t\tsocket.emit('chat message', this.state.room, this.state.message);\n\t\t\tthis.setState({message: \"\"});\n\t\t}\n\t}\n\n\tsetName = e => {\n\t\tthis.setState({ name: e.target.value })\n\t}\n\n\tsetNewRoomName = e => {\n\t\tthis.setState({ newRoomName: e.target.value })\n\t}\n\n\tsetMessage = e => {\n\t\tthis.setState({message: e.target.value})\n\t}\n\n\ttopnav = () => {\n\t\tlet rooms = [...this.state.rooms];\n\t\treturn rooms.map(room => {\n\t\t\treturn(\n\t\t\t\t<div style={{\n\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\theight: '30px',\n\t\t\t\t\twidth: '50px',\n\t\t\t\t\tpadding: '10px',\n\t\t\t\t\tborder: '1px solid white',\n\t\t\t\t\tbackgroundColor: 'purple',\n\t\t\t\t}}>\n\t\t\t\t\t{room}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t}\n\n  render() {\n\t\tconst { loading, userSubmitted, name, message, messages, userList, room, rooms, newRoomName } = this.state;\n    return (\n\t\t\t<StyledWrapper>\n\t\t\t\t<SideBar>\n\t\t\t\t\t{loading && <LoadingDots text=\"Finding location\" />}\n\t\t\t\t\t{(!loading && !userSubmitted) &&\n\t\t\t\t\t\t<InputAndSubmit\n\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tbuttonText=\"Send\"\n\t\t\t\t\t\t\tonChange={this.setName}\n\t\t\t\t\t\t\tonClick={this.submitUser}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t{userSubmitted && <UserTagList userList={userList} />}\n\t\t\t\t</SideBar>\n\t\t\t\t<Content>\n\t\t\t\t\t{!room ?\n\t\t\t\t\t\t<SplashPage onChange={this.setNewRoomName} onClick={this.joinRoom} /> :\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div>{this.topnav()}</div>\n\t\t\t\t\t\t\t<div>{messages}</div>\n\t\t\t\t\t\t\t<InputAndSubmit\n\t\t\t\t\t\t\t\tplaceholder=\"Write a message...\"\n\t\t\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\t\t\tbuttonText=\"Send\"\n\t\t\t\t\t\t\t\tonChange={this.setMessage}\n\t\t\t\t\t\t\t\tonClick={this.sendMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</Content>\n\t\t\t</StyledWrapper>\n\t\t)\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}