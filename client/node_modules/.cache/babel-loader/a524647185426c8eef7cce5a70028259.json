{"ast":null,"code":"var _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient('http://127.0.0.1:4000');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      message: '',\n      name: '',\n      id: '',\n      location: {}\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function () {}, function () {}, {}); //The working next statement.\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lon: position.coords.longitude,\n          lat: position.coords.latitude\n        }\n      });\n    }, function (err) {\n      console.log(err);\n    }, {\n      enableHighAccuracy: true\n    }); // navigator.geolocation.getCurrentPosition(position => {\n    // \tconsole.log('SUCCESS ', position);\n    // \tthis.setState({\n    // \t\tlocation: {\n    // \t\t\tlon: position.coords.longitude,\n    // \t\t\tlat: position.coords.latitude\n    // \t\t}\n    // \t})\n    // }, err => {\n    // \tconsole.log('ERROR ', err);\n    // }, {timeout: 30000, maximumAge: 0});\n\n    socket.on('connect', () => {\n      this.setState({\n        id: socket.id\n      });\n    }); // socket.emit('create', prompt());\n\n    socket.on('chat message', msg => {\n      this.setState(previousState => ({\n        messages: [...previousState.messages, msg]\n      }));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Location:\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Longitude\"), this.state.location.lon, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Latitude\"), this.state.location.lat), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.messages), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.message,\n      onChange: ({\n        target\n      }) => this.setState({\n        message: target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => {\n        e.preventDefault();\n        socket.emit('chat message', this.state.message);\n        this.setState({\n          message: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/App.js"],"names":["React","Component","socketIOClient","socket","App","state","messages","message","name","id","location","componentDidMount","navigator","geolocation","getCurrentPosition","position","setState","lon","coords","longitude","lat","latitude","err","console","log","enableHighAccuracy","on","msg","previousState","render","target","value","e","preventDefault","emit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient('http://127.0.0.1:4000');\n\n\nclass App extends Component {\n\tstate = {\n\t\tmessages: [],\n\t\tmessage: '',\n\t\tname: '',\n\t\tid: '',\n\t\tlocation: {}\n\t};\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(function () {}, function () {}, {});\n\t\t\t//The working next statement.\n\t\t\tnavigator.geolocation.getCurrentPosition( position => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tlocation: {\n\t\t\t\t\t\tlon:position.coords.longitude,\n\t\t\t\t\t\tlat: position.coords.latitude\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}, function (err) {\n\t\t\t    console.log(err)\n\t\t\t}, {\n\t\t\t    enableHighAccuracy: true\n\t\t\t});\n\t\t// navigator.geolocation.getCurrentPosition(position => {\n\t\t// \tconsole.log('SUCCESS ', position);\n\t\t// \tthis.setState({\n\t\t// \t\tlocation: {\n\t\t// \t\t\tlon: position.coords.longitude,\n\t\t// \t\t\tlat: position.coords.latitude\n\t\t// \t\t}\n\t\t// \t})\n\t\t// }, err => {\n\t\t// \tconsole.log('ERROR ', err);\n\t\t// }, {timeout: 30000, maximumAge: 0});\n\t\tsocket.on('connect', () => {\n\t\t\tthis.setState({id: socket.id});\n\t\t})\n\t\t// socket.emit('create', prompt());\n\t\tsocket.on('chat message', msg => {\n\t\t\tthis.setState(previousState => ({\n\t\t\t    messages: [...previousState.messages, msg]\n\t\t\t}));\n\t\t});\n\t}\n\n  render() {\n    return (\n    \t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{this.state.name}</h1>\n\t\t\t\t\t<h1>{this.state.id}</h1>\n\t\t\t\t\t<h1>Location:</h1>\n\t\t\t\t\t<h2>Longitude</h2>\n\t\t\t\t\t{this.state.location.lon}\n\t\t\t\t\t<h2>Latitude</h2>\n\t\t\t\t\t{this.state.location.lat}\n\t\t\t\t</div>\n\t\t\t\t<br />\n    \t\t<div>\n    \t\t\t{this.state.messages}\n    \t\t</div>\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"text\" value={this.state.message} onChange={ ({target}) => this.setState({message: target.value}) } />\n\t\t\t\t\t<button type=\"submit\" onClick={e => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tsocket.emit('chat message', this.state.message);\n\t\t\t\t\t\tthis.setState({message: \"\"})\n\t\t\t\t\t}} />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}