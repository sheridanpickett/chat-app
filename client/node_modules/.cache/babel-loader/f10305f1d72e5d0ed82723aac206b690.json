{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sheridan/Desktop/react-socket/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sheridan/Desktop/react-socket/client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tfont-family: \\\"Geneva\\\";\\n\\tcolor: white\\n\\tmin-height: 100vh;\\n\\tmin-width: 100vw;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport styled from 'styled-components';\nimport LoadingDots from './components/LoadingDots';\nimport InputAndSubmit from './components/InputAndSubmit';\nimport UserTagList from './components/UserTagList';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\nconst socket = socketIOClient('http://127.0.0.1:4000');\nconst StyledWrapper = styled.div(_templateObject());\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      message: '',\n      name: '',\n      socketID: '',\n      location: {},\n      loading: true,\n      userSubmitted: false,\n      userList: [],\n      rooms: []\n    };\n\n    this.setName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.submitUser = async e => {\n      e.preventDefault();\n\n      if (this.state.name !== '') {\n        this.setState({\n          userSubmitted: true\n        });\n\n        try {\n          let userList = await fetch('http://127.0.0.1:4000/createUser', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              name: this.state.name,\n              socketID: this.state.socketID,\n              location: {\n                type: \"Point\",\n                coordinates: [this.state.location.lon, this.state.location.lat]\n              }\n            })\n          });\n          userList = await userList.json();\n          this.setState({\n            userList\n          });\n          console.log('done');\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.joinRoom = id => {\n      socket.emit('join room', id);\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log('location found');\n      this.setState({\n        location: {\n          lon: position.coords.longitude,\n          lat: position.coords.latitude\n        },\n        loading: false\n      });\n    });\n    socket.on('connect', () => {\n      this.setState({\n        socketID: socket.id\n      });\n    });\n    socket.on('chat message', msg => {\n      this.setState(previousState => ({\n        messages: [...previousState.messages, msg]\n      }));\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          userSubmitted = _this$state.userSubmitted,\n          userList = _this$state.userList,\n          rooms = _this$state.rooms;\n    return React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, loading && React.createElement(LoadingDots, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), !loading && !userSubmitted && React.createElement(InputAndSubmit, {\n      placeholder: \"Enter your name\",\n      buttonText: \"Send\",\n      onChange: this.setName,\n      onClick: this.submitUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), userSubmitted && React.createElement(UserTagList, {\n      userList: userList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, rooms.length < 1 ? React.createElement(\"div\", {\n      style: {\n        color: 'blue',\n        'text-align': 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Boo\") : React.createElement(InputAndSubmit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sheridan/Desktop/react-socket/client/src/App.js"],"names":["React","Component","socketIOClient","styled","LoadingDots","InputAndSubmit","UserTagList","SideBar","Content","socket","StyledWrapper","div","App","state","messages","message","name","socketID","location","loading","userSubmitted","userList","rooms","setName","e","setState","target","value","submitUser","preventDefault","fetch","method","headers","body","JSON","stringify","type","coordinates","lon","lat","json","console","log","err","joinRoom","id","emit","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","on","msg","previousState","render","length","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport styled from 'styled-components';\nimport LoadingDots from './components/LoadingDots';\nimport InputAndSubmit from './components/InputAndSubmit';\nimport UserTagList from './components/UserTagList';\nimport SideBar from './components/SideBar';\nimport Content from './components/Content';\n\nconst socket = socketIOClient('http://127.0.0.1:4000');\n\nconst StyledWrapper = styled.div`\n\tdisplay: flex;\n\tfont-family: \"Geneva\";\n\tcolor: white\n\tmin-height: 100vh;\n\tmin-width: 100vw;\n`\n\nclass App extends Component {\n\tstate = {\n\t\tmessages: [],\n\t\tmessage: '',\n\t\tname: '',\n\t\tsocketID: '',\n\t\tlocation: {},\n\t\tloading: true,\n\t\tuserSubmitted: false,\n\t\tuserList: [],\n\t\trooms: []\n\t};\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\tconsole.log('location found')\n\t\t\tthis.setState({\n\t\t\t\tlocation: {\n\t\t\t\t\tlon: position.coords.longitude,\n\t\t\t\t\tlat: position.coords.latitude\n\t\t\t\t},\n\t\t\t\tloading: false\n\t\t\t})\n\t\t});\n\t\tsocket.on('connect', () => {\n\t\t\tthis.setState({socketID: socket.id});\n\t\t})\n\t\tsocket.on('chat message', msg => {\n\t\t\tthis.setState(previousState => ({\n\t\t\t    messages: [...previousState.messages, msg]\n\t\t\t}));\n\t\t});\n\t}\n\n\tsetName = e => {\n\t\tthis.setState({ name: e.target.value })\n\t}\n\n\tsubmitUser = async e => {\n\t\te.preventDefault()\n\t\tif (this.state.name !== ''){\n\t\t\tthis.setState({userSubmitted: true});\n\t\t\ttry {\n\t\t\t\tlet userList = await fetch('http://127.0.0.1:4000/createUser', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\tsocketID: this.state.socketID,\n\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\ttype: \"Point\",\n\t\t\t\t\t\t\tcoordinates: [this.state.location.lon, this.state.location.lat]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tuserList = await userList.json();\n\t\t\t\tthis.setState({userList})\n\t\t\t\tconsole.log('done')\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t}\n\t}\n\n\tjoinRoom = id => {\n\t\tsocket.emit('join room', id)\n\t}\n\n  render() {\n\t\tconst { loading, userSubmitted, userList, rooms } = this.state;\n    return (\n\t\t\t<StyledWrapper>\n\t\t\t\t<SideBar>\n\t\t\t\t\t{loading && <LoadingDots />}\n\t\t\t\t\t{(!loading && !userSubmitted) &&\n\t\t\t\t\t\t<InputAndSubmit\n\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t\t\t\tbuttonText=\"Send\"\n\t\t\t\t\t\t\tonChange={this.setName}\n\t\t\t\t\t\t\tonClick={this.submitUser}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t{userSubmitted && <UserTagList userList={userList} />}\n\t\t\t\t</SideBar>\n\t\t\t\t<Content>\n\t\t\t\t\t{rooms.length < 1 ?\n\t\t\t\t\t\t<div style={{color: 'blue', 'text-align': 'center'}}>Boo</div> :\n\t\t\t\t\t\t<InputAndSubmit />\n\t\t\t\t\t}\n\t\t\t\t</Content>\n\t\t\t</StyledWrapper>\n\t\t)\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}